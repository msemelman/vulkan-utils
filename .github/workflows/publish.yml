name: Build and Publish Package

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v0.1.7, v1.0.0)
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  id-token: write  # For trusted publishing to PyPI

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.10
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run tests
      run: |
        uv run pytest -v
      continue-on-error: true  # Don't fail build if no tests exist yet
    
    - name: Check package can be built
      run: |
        uv build

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.10
    
    - name: Install dependencies
      run: |
        uv sync
    
    - name: Build package
      run: |
        uv build
    
    - name: Check package contents
      run: |
        uv run python -m tarfile -l dist/*.tar.gz
        uv run python -c "
        import zipfile
        import glob
        for wheel in glob.glob('dist/*.whl'):
            with zipfile.ZipFile(wheel, 'r') as z:
                print(f'Contents of {wheel}:')
                z.printdir()
        "
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-pypi-trusted:
    # Alternative job using trusted publishing (recommended)
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi-trusted
      url: https://pypi.org/p/vulkan_utils
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Publish to PyPI (Trusted Publishing)
      run: |
        uv publish --trusted-publishing always
